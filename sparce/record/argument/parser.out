Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> content
Rule 1     expr -> NOT expr
Rule 2     expr -> expr MULT expr
Rule 3     expr -> expr LSHIFT expr
Rule 4     expr -> expr AND expr
Rule 5     expr -> expr OR expr
Rule 6     expr -> expr EQUIVALENT expr
Rule 7     expr -> item
Rule 8     setcontent -> terminal terminal
Rule 9     setcontent -> terminal setcontent
Rule 10    terminal -> STRING
Rule 11    terminal -> INTEGER
Rule 12    terminal -> ID
Rule 13    terminal -> ADDROF ID
Rule 14    terminal -> TIME
Rule 15    terminal -> FLOAT
Rule 16    terminal -> ELLIPSIS
Rule 17    become -> item ARROW item
Rule 18    list -> LBRACKET content RBRACKET
Rule 19    list -> LBRACKET RBRACKET
Rule 20    structure -> LBRACE content RBRACE
Rule 21    macro -> ID LPARENTHESES content RPARENTHESES
Rule 22    content -> content COMMA content
Rule 23    content -> expr
Rule 24    content -> ID EQUAL expr
Rule 25    content -> setcontent
Rule 26    item -> structure
Rule 27    item -> macro
Rule 28    item -> terminal
Rule 29    item -> list
Rule 30    item -> become

Terminals, with rules where they appear

ADDROF               : 13
AND                  : 4
ARROW                : 17
COMMA                : 22
ELLIPSIS             : 16
EQUAL                : 24
EQUIVALENT           : 6
FLOAT                : 15
ID                   : 12 13 21 24
INTEGER              : 11
LBRACE               : 20
LBRACKET             : 18 19
LPARENTHESES         : 21
LSHIFT               : 3
MULT                 : 2
NOT                  : 1
OR                   : 5
RBRACE               : 20
RBRACKET             : 18 19
RPARENTHESES         : 21
STRING               : 10
TIME                 : 14
error                : 

Nonterminals, with rules where they appear

become               : 30
content              : 18 20 21 22 22 0
expr                 : 1 2 2 3 3 4 4 5 5 6 6 23 24
item                 : 7 17 17
list                 : 29
macro                : 27
setcontent           : 9 25
structure            : 26
terminal             : 8 8 9 28

Parsing method: LALR

state 0

    (0) S' -> . content
    (22) content -> . content COMMA content
    (23) content -> . expr
    (24) content -> . ID EQUAL expr
    (25) content -> . setcontent
    (1) expr -> . NOT expr
    (2) expr -> . expr MULT expr
    (3) expr -> . expr LSHIFT expr
    (4) expr -> . expr AND expr
    (5) expr -> . expr OR expr
    (6) expr -> . expr EQUIVALENT expr
    (7) expr -> . item
    (8) setcontent -> . terminal terminal
    (9) setcontent -> . terminal setcontent
    (26) item -> . structure
    (27) item -> . macro
    (28) item -> . terminal
    (29) item -> . list
    (30) item -> . become
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (20) structure -> . LBRACE content RBRACE
    (21) macro -> . ID LPARENTHESES content RPARENTHESES
    (18) list -> . LBRACKET content RBRACKET
    (19) list -> . LBRACKET RBRACKET
    (17) become -> . item ARROW item

    ID              shift and go to state 3
    NOT             shift and go to state 5
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17
    LBRACE          shift and go to state 18
    LBRACKET        shift and go to state 19

    content                        shift and go to state 1
    expr                           shift and go to state 2
    setcontent                     shift and go to state 4
    item                           shift and go to state 6
    terminal                       shift and go to state 7
    structure                      shift and go to state 8
    macro                          shift and go to state 9
    list                           shift and go to state 10
    become                         shift and go to state 11

state 1

    (0) S' -> content .
    (22) content -> content . COMMA content

    COMMA           shift and go to state 20


state 2

    (23) content -> expr .
    (2) expr -> expr . MULT expr
    (3) expr -> expr . LSHIFT expr
    (4) expr -> expr . AND expr
    (5) expr -> expr . OR expr
    (6) expr -> expr . EQUIVALENT expr

    COMMA           reduce using rule 23 (content -> expr .)
    $end            reduce using rule 23 (content -> expr .)
    RBRACE          reduce using rule 23 (content -> expr .)
    RBRACKET        reduce using rule 23 (content -> expr .)
    RPARENTHESES    reduce using rule 23 (content -> expr .)
    MULT            shift and go to state 21
    LSHIFT          shift and go to state 22
    AND             shift and go to state 23
    OR              shift and go to state 24
    EQUIVALENT      shift and go to state 25


state 3

    (24) content -> ID . EQUAL expr
    (12) terminal -> ID .
    (21) macro -> ID . LPARENTHESES content RPARENTHESES

    EQUAL           shift and go to state 26
    STRING          reduce using rule 12 (terminal -> ID .)
    INTEGER         reduce using rule 12 (terminal -> ID .)
    ID              reduce using rule 12 (terminal -> ID .)
    ADDROF          reduce using rule 12 (terminal -> ID .)
    TIME            reduce using rule 12 (terminal -> ID .)
    FLOAT           reduce using rule 12 (terminal -> ID .)
    ELLIPSIS        reduce using rule 12 (terminal -> ID .)
    ARROW           reduce using rule 12 (terminal -> ID .)
    MULT            reduce using rule 12 (terminal -> ID .)
    LSHIFT          reduce using rule 12 (terminal -> ID .)
    AND             reduce using rule 12 (terminal -> ID .)
    OR              reduce using rule 12 (terminal -> ID .)
    EQUIVALENT      reduce using rule 12 (terminal -> ID .)
    COMMA           reduce using rule 12 (terminal -> ID .)
    $end            reduce using rule 12 (terminal -> ID .)
    RBRACE          reduce using rule 12 (terminal -> ID .)
    RBRACKET        reduce using rule 12 (terminal -> ID .)
    RPARENTHESES    reduce using rule 12 (terminal -> ID .)
    LPARENTHESES    shift and go to state 27


state 4

    (25) content -> setcontent .

    COMMA           reduce using rule 25 (content -> setcontent .)
    $end            reduce using rule 25 (content -> setcontent .)
    RBRACE          reduce using rule 25 (content -> setcontent .)
    RBRACKET        reduce using rule 25 (content -> setcontent .)
    RPARENTHESES    reduce using rule 25 (content -> setcontent .)


state 5

    (1) expr -> NOT . expr
    (1) expr -> . NOT expr
    (2) expr -> . expr MULT expr
    (3) expr -> . expr LSHIFT expr
    (4) expr -> . expr AND expr
    (5) expr -> . expr OR expr
    (6) expr -> . expr EQUIVALENT expr
    (7) expr -> . item
    (26) item -> . structure
    (27) item -> . macro
    (28) item -> . terminal
    (29) item -> . list
    (30) item -> . become
    (20) structure -> . LBRACE content RBRACE
    (21) macro -> . ID LPARENTHESES content RPARENTHESES
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (18) list -> . LBRACKET content RBRACKET
    (19) list -> . LBRACKET RBRACKET
    (17) become -> . item ARROW item

    NOT             shift and go to state 5
    LBRACE          shift and go to state 18
    ID              shift and go to state 30
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17
    LBRACKET        shift and go to state 19

    expr                           shift and go to state 28
    item                           shift and go to state 6
    structure                      shift and go to state 8
    macro                          shift and go to state 9
    terminal                       shift and go to state 29
    list                           shift and go to state 10
    become                         shift and go to state 11

state 6

    (7) expr -> item .
    (17) become -> item . ARROW item

    MULT            reduce using rule 7 (expr -> item .)
    LSHIFT          reduce using rule 7 (expr -> item .)
    AND             reduce using rule 7 (expr -> item .)
    OR              reduce using rule 7 (expr -> item .)
    EQUIVALENT      reduce using rule 7 (expr -> item .)
    COMMA           reduce using rule 7 (expr -> item .)
    $end            reduce using rule 7 (expr -> item .)
    RBRACE          reduce using rule 7 (expr -> item .)
    RBRACKET        reduce using rule 7 (expr -> item .)
    RPARENTHESES    reduce using rule 7 (expr -> item .)
    ARROW           shift and go to state 31


state 7

    (8) setcontent -> terminal . terminal
    (9) setcontent -> terminal . setcontent
    (28) item -> terminal .
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (8) setcontent -> . terminal terminal
    (9) setcontent -> . terminal setcontent

    ARROW           reduce using rule 28 (item -> terminal .)
    MULT            reduce using rule 28 (item -> terminal .)
    LSHIFT          reduce using rule 28 (item -> terminal .)
    AND             reduce using rule 28 (item -> terminal .)
    OR              reduce using rule 28 (item -> terminal .)
    EQUIVALENT      reduce using rule 28 (item -> terminal .)
    COMMA           reduce using rule 28 (item -> terminal .)
    $end            reduce using rule 28 (item -> terminal .)
    RBRACE          reduce using rule 28 (item -> terminal .)
    RBRACKET        reduce using rule 28 (item -> terminal .)
    RPARENTHESES    reduce using rule 28 (item -> terminal .)
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ID              shift and go to state 34
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17

    terminal                       shift and go to state 32
    setcontent                     shift and go to state 33

state 8

    (26) item -> structure .

    ARROW           reduce using rule 26 (item -> structure .)
    MULT            reduce using rule 26 (item -> structure .)
    LSHIFT          reduce using rule 26 (item -> structure .)
    AND             reduce using rule 26 (item -> structure .)
    OR              reduce using rule 26 (item -> structure .)
    EQUIVALENT      reduce using rule 26 (item -> structure .)
    COMMA           reduce using rule 26 (item -> structure .)
    $end            reduce using rule 26 (item -> structure .)
    RBRACE          reduce using rule 26 (item -> structure .)
    RBRACKET        reduce using rule 26 (item -> structure .)
    RPARENTHESES    reduce using rule 26 (item -> structure .)


state 9

    (27) item -> macro .

    ARROW           reduce using rule 27 (item -> macro .)
    MULT            reduce using rule 27 (item -> macro .)
    LSHIFT          reduce using rule 27 (item -> macro .)
    AND             reduce using rule 27 (item -> macro .)
    OR              reduce using rule 27 (item -> macro .)
    EQUIVALENT      reduce using rule 27 (item -> macro .)
    COMMA           reduce using rule 27 (item -> macro .)
    $end            reduce using rule 27 (item -> macro .)
    RBRACE          reduce using rule 27 (item -> macro .)
    RBRACKET        reduce using rule 27 (item -> macro .)
    RPARENTHESES    reduce using rule 27 (item -> macro .)


state 10

    (29) item -> list .

    ARROW           reduce using rule 29 (item -> list .)
    MULT            reduce using rule 29 (item -> list .)
    LSHIFT          reduce using rule 29 (item -> list .)
    AND             reduce using rule 29 (item -> list .)
    OR              reduce using rule 29 (item -> list .)
    EQUIVALENT      reduce using rule 29 (item -> list .)
    COMMA           reduce using rule 29 (item -> list .)
    $end            reduce using rule 29 (item -> list .)
    RBRACE          reduce using rule 29 (item -> list .)
    RBRACKET        reduce using rule 29 (item -> list .)
    RPARENTHESES    reduce using rule 29 (item -> list .)


state 11

    (30) item -> become .

    ARROW           reduce using rule 30 (item -> become .)
    MULT            reduce using rule 30 (item -> become .)
    LSHIFT          reduce using rule 30 (item -> become .)
    AND             reduce using rule 30 (item -> become .)
    OR              reduce using rule 30 (item -> become .)
    EQUIVALENT      reduce using rule 30 (item -> become .)
    COMMA           reduce using rule 30 (item -> become .)
    $end            reduce using rule 30 (item -> become .)
    RBRACE          reduce using rule 30 (item -> become .)
    RBRACKET        reduce using rule 30 (item -> become .)
    RPARENTHESES    reduce using rule 30 (item -> become .)


state 12

    (10) terminal -> STRING .

    STRING          reduce using rule 10 (terminal -> STRING .)
    INTEGER         reduce using rule 10 (terminal -> STRING .)
    ID              reduce using rule 10 (terminal -> STRING .)
    ADDROF          reduce using rule 10 (terminal -> STRING .)
    TIME            reduce using rule 10 (terminal -> STRING .)
    FLOAT           reduce using rule 10 (terminal -> STRING .)
    ELLIPSIS        reduce using rule 10 (terminal -> STRING .)
    ARROW           reduce using rule 10 (terminal -> STRING .)
    MULT            reduce using rule 10 (terminal -> STRING .)
    LSHIFT          reduce using rule 10 (terminal -> STRING .)
    AND             reduce using rule 10 (terminal -> STRING .)
    OR              reduce using rule 10 (terminal -> STRING .)
    EQUIVALENT      reduce using rule 10 (terminal -> STRING .)
    COMMA           reduce using rule 10 (terminal -> STRING .)
    $end            reduce using rule 10 (terminal -> STRING .)
    RBRACE          reduce using rule 10 (terminal -> STRING .)
    RBRACKET        reduce using rule 10 (terminal -> STRING .)
    RPARENTHESES    reduce using rule 10 (terminal -> STRING .)


state 13

    (11) terminal -> INTEGER .

    STRING          reduce using rule 11 (terminal -> INTEGER .)
    INTEGER         reduce using rule 11 (terminal -> INTEGER .)
    ID              reduce using rule 11 (terminal -> INTEGER .)
    ADDROF          reduce using rule 11 (terminal -> INTEGER .)
    TIME            reduce using rule 11 (terminal -> INTEGER .)
    FLOAT           reduce using rule 11 (terminal -> INTEGER .)
    ELLIPSIS        reduce using rule 11 (terminal -> INTEGER .)
    ARROW           reduce using rule 11 (terminal -> INTEGER .)
    MULT            reduce using rule 11 (terminal -> INTEGER .)
    LSHIFT          reduce using rule 11 (terminal -> INTEGER .)
    AND             reduce using rule 11 (terminal -> INTEGER .)
    OR              reduce using rule 11 (terminal -> INTEGER .)
    EQUIVALENT      reduce using rule 11 (terminal -> INTEGER .)
    COMMA           reduce using rule 11 (terminal -> INTEGER .)
    $end            reduce using rule 11 (terminal -> INTEGER .)
    RBRACE          reduce using rule 11 (terminal -> INTEGER .)
    RBRACKET        reduce using rule 11 (terminal -> INTEGER .)
    RPARENTHESES    reduce using rule 11 (terminal -> INTEGER .)


state 14

    (13) terminal -> ADDROF . ID

    ID              shift and go to state 35


state 15

    (14) terminal -> TIME .

    STRING          reduce using rule 14 (terminal -> TIME .)
    INTEGER         reduce using rule 14 (terminal -> TIME .)
    ID              reduce using rule 14 (terminal -> TIME .)
    ADDROF          reduce using rule 14 (terminal -> TIME .)
    TIME            reduce using rule 14 (terminal -> TIME .)
    FLOAT           reduce using rule 14 (terminal -> TIME .)
    ELLIPSIS        reduce using rule 14 (terminal -> TIME .)
    ARROW           reduce using rule 14 (terminal -> TIME .)
    MULT            reduce using rule 14 (terminal -> TIME .)
    LSHIFT          reduce using rule 14 (terminal -> TIME .)
    AND             reduce using rule 14 (terminal -> TIME .)
    OR              reduce using rule 14 (terminal -> TIME .)
    EQUIVALENT      reduce using rule 14 (terminal -> TIME .)
    COMMA           reduce using rule 14 (terminal -> TIME .)
    $end            reduce using rule 14 (terminal -> TIME .)
    RBRACE          reduce using rule 14 (terminal -> TIME .)
    RBRACKET        reduce using rule 14 (terminal -> TIME .)
    RPARENTHESES    reduce using rule 14 (terminal -> TIME .)


state 16

    (15) terminal -> FLOAT .

    STRING          reduce using rule 15 (terminal -> FLOAT .)
    INTEGER         reduce using rule 15 (terminal -> FLOAT .)
    ID              reduce using rule 15 (terminal -> FLOAT .)
    ADDROF          reduce using rule 15 (terminal -> FLOAT .)
    TIME            reduce using rule 15 (terminal -> FLOAT .)
    FLOAT           reduce using rule 15 (terminal -> FLOAT .)
    ELLIPSIS        reduce using rule 15 (terminal -> FLOAT .)
    ARROW           reduce using rule 15 (terminal -> FLOAT .)
    MULT            reduce using rule 15 (terminal -> FLOAT .)
    LSHIFT          reduce using rule 15 (terminal -> FLOAT .)
    AND             reduce using rule 15 (terminal -> FLOAT .)
    OR              reduce using rule 15 (terminal -> FLOAT .)
    EQUIVALENT      reduce using rule 15 (terminal -> FLOAT .)
    COMMA           reduce using rule 15 (terminal -> FLOAT .)
    $end            reduce using rule 15 (terminal -> FLOAT .)
    RBRACE          reduce using rule 15 (terminal -> FLOAT .)
    RBRACKET        reduce using rule 15 (terminal -> FLOAT .)
    RPARENTHESES    reduce using rule 15 (terminal -> FLOAT .)


state 17

    (16) terminal -> ELLIPSIS .

    STRING          reduce using rule 16 (terminal -> ELLIPSIS .)
    INTEGER         reduce using rule 16 (terminal -> ELLIPSIS .)
    ID              reduce using rule 16 (terminal -> ELLIPSIS .)
    ADDROF          reduce using rule 16 (terminal -> ELLIPSIS .)
    TIME            reduce using rule 16 (terminal -> ELLIPSIS .)
    FLOAT           reduce using rule 16 (terminal -> ELLIPSIS .)
    ELLIPSIS        reduce using rule 16 (terminal -> ELLIPSIS .)
    ARROW           reduce using rule 16 (terminal -> ELLIPSIS .)
    MULT            reduce using rule 16 (terminal -> ELLIPSIS .)
    LSHIFT          reduce using rule 16 (terminal -> ELLIPSIS .)
    AND             reduce using rule 16 (terminal -> ELLIPSIS .)
    OR              reduce using rule 16 (terminal -> ELLIPSIS .)
    EQUIVALENT      reduce using rule 16 (terminal -> ELLIPSIS .)
    COMMA           reduce using rule 16 (terminal -> ELLIPSIS .)
    $end            reduce using rule 16 (terminal -> ELLIPSIS .)
    RBRACE          reduce using rule 16 (terminal -> ELLIPSIS .)
    RBRACKET        reduce using rule 16 (terminal -> ELLIPSIS .)
    RPARENTHESES    reduce using rule 16 (terminal -> ELLIPSIS .)


state 18

    (20) structure -> LBRACE . content RBRACE
    (22) content -> . content COMMA content
    (23) content -> . expr
    (24) content -> . ID EQUAL expr
    (25) content -> . setcontent
    (1) expr -> . NOT expr
    (2) expr -> . expr MULT expr
    (3) expr -> . expr LSHIFT expr
    (4) expr -> . expr AND expr
    (5) expr -> . expr OR expr
    (6) expr -> . expr EQUIVALENT expr
    (7) expr -> . item
    (8) setcontent -> . terminal terminal
    (9) setcontent -> . terminal setcontent
    (26) item -> . structure
    (27) item -> . macro
    (28) item -> . terminal
    (29) item -> . list
    (30) item -> . become
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (20) structure -> . LBRACE content RBRACE
    (21) macro -> . ID LPARENTHESES content RPARENTHESES
    (18) list -> . LBRACKET content RBRACKET
    (19) list -> . LBRACKET RBRACKET
    (17) become -> . item ARROW item

    ID              shift and go to state 3
    NOT             shift and go to state 5
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17
    LBRACE          shift and go to state 18
    LBRACKET        shift and go to state 19

    content                        shift and go to state 36
    expr                           shift and go to state 2
    setcontent                     shift and go to state 4
    item                           shift and go to state 6
    terminal                       shift and go to state 7
    structure                      shift and go to state 8
    macro                          shift and go to state 9
    list                           shift and go to state 10
    become                         shift and go to state 11

state 19

    (18) list -> LBRACKET . content RBRACKET
    (19) list -> LBRACKET . RBRACKET
    (22) content -> . content COMMA content
    (23) content -> . expr
    (24) content -> . ID EQUAL expr
    (25) content -> . setcontent
    (1) expr -> . NOT expr
    (2) expr -> . expr MULT expr
    (3) expr -> . expr LSHIFT expr
    (4) expr -> . expr AND expr
    (5) expr -> . expr OR expr
    (6) expr -> . expr EQUIVALENT expr
    (7) expr -> . item
    (8) setcontent -> . terminal terminal
    (9) setcontent -> . terminal setcontent
    (26) item -> . structure
    (27) item -> . macro
    (28) item -> . terminal
    (29) item -> . list
    (30) item -> . become
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (20) structure -> . LBRACE content RBRACE
    (21) macro -> . ID LPARENTHESES content RPARENTHESES
    (18) list -> . LBRACKET content RBRACKET
    (19) list -> . LBRACKET RBRACKET
    (17) become -> . item ARROW item

    RBRACKET        shift and go to state 38
    ID              shift and go to state 3
    NOT             shift and go to state 5
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17
    LBRACE          shift and go to state 18
    LBRACKET        shift and go to state 19

    content                        shift and go to state 37
    expr                           shift and go to state 2
    setcontent                     shift and go to state 4
    item                           shift and go to state 6
    terminal                       shift and go to state 7
    structure                      shift and go to state 8
    macro                          shift and go to state 9
    list                           shift and go to state 10
    become                         shift and go to state 11

state 20

    (22) content -> content COMMA . content
    (22) content -> . content COMMA content
    (23) content -> . expr
    (24) content -> . ID EQUAL expr
    (25) content -> . setcontent
    (1) expr -> . NOT expr
    (2) expr -> . expr MULT expr
    (3) expr -> . expr LSHIFT expr
    (4) expr -> . expr AND expr
    (5) expr -> . expr OR expr
    (6) expr -> . expr EQUIVALENT expr
    (7) expr -> . item
    (8) setcontent -> . terminal terminal
    (9) setcontent -> . terminal setcontent
    (26) item -> . structure
    (27) item -> . macro
    (28) item -> . terminal
    (29) item -> . list
    (30) item -> . become
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (20) structure -> . LBRACE content RBRACE
    (21) macro -> . ID LPARENTHESES content RPARENTHESES
    (18) list -> . LBRACKET content RBRACKET
    (19) list -> . LBRACKET RBRACKET
    (17) become -> . item ARROW item

    ID              shift and go to state 3
    NOT             shift and go to state 5
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17
    LBRACE          shift and go to state 18
    LBRACKET        shift and go to state 19

    content                        shift and go to state 39
    expr                           shift and go to state 2
    setcontent                     shift and go to state 4
    item                           shift and go to state 6
    terminal                       shift and go to state 7
    structure                      shift and go to state 8
    macro                          shift and go to state 9
    list                           shift and go to state 10
    become                         shift and go to state 11

state 21

    (2) expr -> expr MULT . expr
    (1) expr -> . NOT expr
    (2) expr -> . expr MULT expr
    (3) expr -> . expr LSHIFT expr
    (4) expr -> . expr AND expr
    (5) expr -> . expr OR expr
    (6) expr -> . expr EQUIVALENT expr
    (7) expr -> . item
    (26) item -> . structure
    (27) item -> . macro
    (28) item -> . terminal
    (29) item -> . list
    (30) item -> . become
    (20) structure -> . LBRACE content RBRACE
    (21) macro -> . ID LPARENTHESES content RPARENTHESES
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (18) list -> . LBRACKET content RBRACKET
    (19) list -> . LBRACKET RBRACKET
    (17) become -> . item ARROW item

    NOT             shift and go to state 5
    LBRACE          shift and go to state 18
    ID              shift and go to state 30
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17
    LBRACKET        shift and go to state 19

    expr                           shift and go to state 40
    item                           shift and go to state 6
    structure                      shift and go to state 8
    macro                          shift and go to state 9
    terminal                       shift and go to state 29
    list                           shift and go to state 10
    become                         shift and go to state 11

state 22

    (3) expr -> expr LSHIFT . expr
    (1) expr -> . NOT expr
    (2) expr -> . expr MULT expr
    (3) expr -> . expr LSHIFT expr
    (4) expr -> . expr AND expr
    (5) expr -> . expr OR expr
    (6) expr -> . expr EQUIVALENT expr
    (7) expr -> . item
    (26) item -> . structure
    (27) item -> . macro
    (28) item -> . terminal
    (29) item -> . list
    (30) item -> . become
    (20) structure -> . LBRACE content RBRACE
    (21) macro -> . ID LPARENTHESES content RPARENTHESES
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (18) list -> . LBRACKET content RBRACKET
    (19) list -> . LBRACKET RBRACKET
    (17) become -> . item ARROW item

    NOT             shift and go to state 5
    LBRACE          shift and go to state 18
    ID              shift and go to state 30
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17
    LBRACKET        shift and go to state 19

    expr                           shift and go to state 41
    item                           shift and go to state 6
    structure                      shift and go to state 8
    macro                          shift and go to state 9
    terminal                       shift and go to state 29
    list                           shift and go to state 10
    become                         shift and go to state 11

state 23

    (4) expr -> expr AND . expr
    (1) expr -> . NOT expr
    (2) expr -> . expr MULT expr
    (3) expr -> . expr LSHIFT expr
    (4) expr -> . expr AND expr
    (5) expr -> . expr OR expr
    (6) expr -> . expr EQUIVALENT expr
    (7) expr -> . item
    (26) item -> . structure
    (27) item -> . macro
    (28) item -> . terminal
    (29) item -> . list
    (30) item -> . become
    (20) structure -> . LBRACE content RBRACE
    (21) macro -> . ID LPARENTHESES content RPARENTHESES
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (18) list -> . LBRACKET content RBRACKET
    (19) list -> . LBRACKET RBRACKET
    (17) become -> . item ARROW item

    NOT             shift and go to state 5
    LBRACE          shift and go to state 18
    ID              shift and go to state 30
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17
    LBRACKET        shift and go to state 19

    expr                           shift and go to state 42
    item                           shift and go to state 6
    structure                      shift and go to state 8
    macro                          shift and go to state 9
    terminal                       shift and go to state 29
    list                           shift and go to state 10
    become                         shift and go to state 11

state 24

    (5) expr -> expr OR . expr
    (1) expr -> . NOT expr
    (2) expr -> . expr MULT expr
    (3) expr -> . expr LSHIFT expr
    (4) expr -> . expr AND expr
    (5) expr -> . expr OR expr
    (6) expr -> . expr EQUIVALENT expr
    (7) expr -> . item
    (26) item -> . structure
    (27) item -> . macro
    (28) item -> . terminal
    (29) item -> . list
    (30) item -> . become
    (20) structure -> . LBRACE content RBRACE
    (21) macro -> . ID LPARENTHESES content RPARENTHESES
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (18) list -> . LBRACKET content RBRACKET
    (19) list -> . LBRACKET RBRACKET
    (17) become -> . item ARROW item

    NOT             shift and go to state 5
    LBRACE          shift and go to state 18
    ID              shift and go to state 30
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17
    LBRACKET        shift and go to state 19

    expr                           shift and go to state 43
    item                           shift and go to state 6
    structure                      shift and go to state 8
    macro                          shift and go to state 9
    terminal                       shift and go to state 29
    list                           shift and go to state 10
    become                         shift and go to state 11

state 25

    (6) expr -> expr EQUIVALENT . expr
    (1) expr -> . NOT expr
    (2) expr -> . expr MULT expr
    (3) expr -> . expr LSHIFT expr
    (4) expr -> . expr AND expr
    (5) expr -> . expr OR expr
    (6) expr -> . expr EQUIVALENT expr
    (7) expr -> . item
    (26) item -> . structure
    (27) item -> . macro
    (28) item -> . terminal
    (29) item -> . list
    (30) item -> . become
    (20) structure -> . LBRACE content RBRACE
    (21) macro -> . ID LPARENTHESES content RPARENTHESES
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (18) list -> . LBRACKET content RBRACKET
    (19) list -> . LBRACKET RBRACKET
    (17) become -> . item ARROW item

    NOT             shift and go to state 5
    LBRACE          shift and go to state 18
    ID              shift and go to state 30
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17
    LBRACKET        shift and go to state 19

    expr                           shift and go to state 44
    item                           shift and go to state 6
    structure                      shift and go to state 8
    macro                          shift and go to state 9
    terminal                       shift and go to state 29
    list                           shift and go to state 10
    become                         shift and go to state 11

state 26

    (24) content -> ID EQUAL . expr
    (1) expr -> . NOT expr
    (2) expr -> . expr MULT expr
    (3) expr -> . expr LSHIFT expr
    (4) expr -> . expr AND expr
    (5) expr -> . expr OR expr
    (6) expr -> . expr EQUIVALENT expr
    (7) expr -> . item
    (26) item -> . structure
    (27) item -> . macro
    (28) item -> . terminal
    (29) item -> . list
    (30) item -> . become
    (20) structure -> . LBRACE content RBRACE
    (21) macro -> . ID LPARENTHESES content RPARENTHESES
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (18) list -> . LBRACKET content RBRACKET
    (19) list -> . LBRACKET RBRACKET
    (17) become -> . item ARROW item

    NOT             shift and go to state 5
    LBRACE          shift and go to state 18
    ID              shift and go to state 30
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17
    LBRACKET        shift and go to state 19

    expr                           shift and go to state 45
    item                           shift and go to state 6
    structure                      shift and go to state 8
    macro                          shift and go to state 9
    terminal                       shift and go to state 29
    list                           shift and go to state 10
    become                         shift and go to state 11

state 27

    (21) macro -> ID LPARENTHESES . content RPARENTHESES
    (22) content -> . content COMMA content
    (23) content -> . expr
    (24) content -> . ID EQUAL expr
    (25) content -> . setcontent
    (1) expr -> . NOT expr
    (2) expr -> . expr MULT expr
    (3) expr -> . expr LSHIFT expr
    (4) expr -> . expr AND expr
    (5) expr -> . expr OR expr
    (6) expr -> . expr EQUIVALENT expr
    (7) expr -> . item
    (8) setcontent -> . terminal terminal
    (9) setcontent -> . terminal setcontent
    (26) item -> . structure
    (27) item -> . macro
    (28) item -> . terminal
    (29) item -> . list
    (30) item -> . become
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (20) structure -> . LBRACE content RBRACE
    (21) macro -> . ID LPARENTHESES content RPARENTHESES
    (18) list -> . LBRACKET content RBRACKET
    (19) list -> . LBRACKET RBRACKET
    (17) become -> . item ARROW item

    ID              shift and go to state 3
    NOT             shift and go to state 5
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17
    LBRACE          shift and go to state 18
    LBRACKET        shift and go to state 19

    content                        shift and go to state 46
    expr                           shift and go to state 2
    setcontent                     shift and go to state 4
    item                           shift and go to state 6
    terminal                       shift and go to state 7
    structure                      shift and go to state 8
    macro                          shift and go to state 9
    list                           shift and go to state 10
    become                         shift and go to state 11

state 28

    (1) expr -> NOT expr .
    (2) expr -> expr . MULT expr
    (3) expr -> expr . LSHIFT expr
    (4) expr -> expr . AND expr
    (5) expr -> expr . OR expr
    (6) expr -> expr . EQUIVALENT expr

    MULT            reduce using rule 1 (expr -> NOT expr .)
    LSHIFT          reduce using rule 1 (expr -> NOT expr .)
    AND             reduce using rule 1 (expr -> NOT expr .)
    OR              reduce using rule 1 (expr -> NOT expr .)
    EQUIVALENT      reduce using rule 1 (expr -> NOT expr .)
    COMMA           reduce using rule 1 (expr -> NOT expr .)
    $end            reduce using rule 1 (expr -> NOT expr .)
    RBRACE          reduce using rule 1 (expr -> NOT expr .)
    RBRACKET        reduce using rule 1 (expr -> NOT expr .)
    RPARENTHESES    reduce using rule 1 (expr -> NOT expr .)

  ! MULT            [ shift and go to state 21 ]
  ! LSHIFT          [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! OR              [ shift and go to state 24 ]
  ! EQUIVALENT      [ shift and go to state 25 ]


state 29

    (28) item -> terminal .

    ARROW           reduce using rule 28 (item -> terminal .)
    MULT            reduce using rule 28 (item -> terminal .)
    LSHIFT          reduce using rule 28 (item -> terminal .)
    AND             reduce using rule 28 (item -> terminal .)
    OR              reduce using rule 28 (item -> terminal .)
    EQUIVALENT      reduce using rule 28 (item -> terminal .)
    COMMA           reduce using rule 28 (item -> terminal .)
    $end            reduce using rule 28 (item -> terminal .)
    RBRACE          reduce using rule 28 (item -> terminal .)
    RBRACKET        reduce using rule 28 (item -> terminal .)
    RPARENTHESES    reduce using rule 28 (item -> terminal .)


state 30

    (21) macro -> ID . LPARENTHESES content RPARENTHESES
    (12) terminal -> ID .

    LPARENTHESES    shift and go to state 27
    ARROW           reduce using rule 12 (terminal -> ID .)
    MULT            reduce using rule 12 (terminal -> ID .)
    LSHIFT          reduce using rule 12 (terminal -> ID .)
    AND             reduce using rule 12 (terminal -> ID .)
    OR              reduce using rule 12 (terminal -> ID .)
    EQUIVALENT      reduce using rule 12 (terminal -> ID .)
    COMMA           reduce using rule 12 (terminal -> ID .)
    $end            reduce using rule 12 (terminal -> ID .)
    RBRACE          reduce using rule 12 (terminal -> ID .)
    RBRACKET        reduce using rule 12 (terminal -> ID .)
    RPARENTHESES    reduce using rule 12 (terminal -> ID .)


state 31

    (17) become -> item ARROW . item
    (26) item -> . structure
    (27) item -> . macro
    (28) item -> . terminal
    (29) item -> . list
    (30) item -> . become
    (20) structure -> . LBRACE content RBRACE
    (21) macro -> . ID LPARENTHESES content RPARENTHESES
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (18) list -> . LBRACKET content RBRACKET
    (19) list -> . LBRACKET RBRACKET
    (17) become -> . item ARROW item

    LBRACE          shift and go to state 18
    ID              shift and go to state 30
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17
    LBRACKET        shift and go to state 19

    item                           shift and go to state 47
    structure                      shift and go to state 8
    macro                          shift and go to state 9
    terminal                       shift and go to state 29
    list                           shift and go to state 10
    become                         shift and go to state 11

state 32

    (8) setcontent -> terminal terminal .
    (8) setcontent -> terminal . terminal
    (9) setcontent -> terminal . setcontent
    (10) terminal -> . STRING
    (11) terminal -> . INTEGER
    (12) terminal -> . ID
    (13) terminal -> . ADDROF ID
    (14) terminal -> . TIME
    (15) terminal -> . FLOAT
    (16) terminal -> . ELLIPSIS
    (8) setcontent -> . terminal terminal
    (9) setcontent -> . terminal setcontent

    COMMA           reduce using rule 8 (setcontent -> terminal terminal .)
    $end            reduce using rule 8 (setcontent -> terminal terminal .)
    RBRACE          reduce using rule 8 (setcontent -> terminal terminal .)
    RBRACKET        reduce using rule 8 (setcontent -> terminal terminal .)
    RPARENTHESES    reduce using rule 8 (setcontent -> terminal terminal .)
    STRING          shift and go to state 12
    INTEGER         shift and go to state 13
    ID              shift and go to state 34
    ADDROF          shift and go to state 14
    TIME            shift and go to state 15
    FLOAT           shift and go to state 16
    ELLIPSIS        shift and go to state 17

    terminal                       shift and go to state 32
    setcontent                     shift and go to state 33

state 33

    (9) setcontent -> terminal setcontent .

    COMMA           reduce using rule 9 (setcontent -> terminal setcontent .)
    $end            reduce using rule 9 (setcontent -> terminal setcontent .)
    RBRACE          reduce using rule 9 (setcontent -> terminal setcontent .)
    RBRACKET        reduce using rule 9 (setcontent -> terminal setcontent .)
    RPARENTHESES    reduce using rule 9 (setcontent -> terminal setcontent .)


state 34

    (12) terminal -> ID .

    STRING          reduce using rule 12 (terminal -> ID .)
    INTEGER         reduce using rule 12 (terminal -> ID .)
    ID              reduce using rule 12 (terminal -> ID .)
    ADDROF          reduce using rule 12 (terminal -> ID .)
    TIME            reduce using rule 12 (terminal -> ID .)
    FLOAT           reduce using rule 12 (terminal -> ID .)
    ELLIPSIS        reduce using rule 12 (terminal -> ID .)
    COMMA           reduce using rule 12 (terminal -> ID .)
    $end            reduce using rule 12 (terminal -> ID .)
    RBRACE          reduce using rule 12 (terminal -> ID .)
    RBRACKET        reduce using rule 12 (terminal -> ID .)
    RPARENTHESES    reduce using rule 12 (terminal -> ID .)


state 35

    (13) terminal -> ADDROF ID .

    STRING          reduce using rule 13 (terminal -> ADDROF ID .)
    INTEGER         reduce using rule 13 (terminal -> ADDROF ID .)
    ID              reduce using rule 13 (terminal -> ADDROF ID .)
    ADDROF          reduce using rule 13 (terminal -> ADDROF ID .)
    TIME            reduce using rule 13 (terminal -> ADDROF ID .)
    FLOAT           reduce using rule 13 (terminal -> ADDROF ID .)
    ELLIPSIS        reduce using rule 13 (terminal -> ADDROF ID .)
    ARROW           reduce using rule 13 (terminal -> ADDROF ID .)
    MULT            reduce using rule 13 (terminal -> ADDROF ID .)
    LSHIFT          reduce using rule 13 (terminal -> ADDROF ID .)
    AND             reduce using rule 13 (terminal -> ADDROF ID .)
    OR              reduce using rule 13 (terminal -> ADDROF ID .)
    EQUIVALENT      reduce using rule 13 (terminal -> ADDROF ID .)
    COMMA           reduce using rule 13 (terminal -> ADDROF ID .)
    $end            reduce using rule 13 (terminal -> ADDROF ID .)
    RBRACE          reduce using rule 13 (terminal -> ADDROF ID .)
    RBRACKET        reduce using rule 13 (terminal -> ADDROF ID .)
    RPARENTHESES    reduce using rule 13 (terminal -> ADDROF ID .)


state 36

    (20) structure -> LBRACE content . RBRACE
    (22) content -> content . COMMA content

    RBRACE          shift and go to state 48
    COMMA           shift and go to state 20


state 37

    (18) list -> LBRACKET content . RBRACKET
    (22) content -> content . COMMA content

    RBRACKET        shift and go to state 49
    COMMA           shift and go to state 20


state 38

    (19) list -> LBRACKET RBRACKET .

    ARROW           reduce using rule 19 (list -> LBRACKET RBRACKET .)
    MULT            reduce using rule 19 (list -> LBRACKET RBRACKET .)
    LSHIFT          reduce using rule 19 (list -> LBRACKET RBRACKET .)
    AND             reduce using rule 19 (list -> LBRACKET RBRACKET .)
    OR              reduce using rule 19 (list -> LBRACKET RBRACKET .)
    EQUIVALENT      reduce using rule 19 (list -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 19 (list -> LBRACKET RBRACKET .)
    $end            reduce using rule 19 (list -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 19 (list -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 19 (list -> LBRACKET RBRACKET .)
    RPARENTHESES    reduce using rule 19 (list -> LBRACKET RBRACKET .)


state 39

    (22) content -> content COMMA content .
    (22) content -> content . COMMA content

    COMMA           reduce using rule 22 (content -> content COMMA content .)
    $end            reduce using rule 22 (content -> content COMMA content .)
    RBRACE          reduce using rule 22 (content -> content COMMA content .)
    RBRACKET        reduce using rule 22 (content -> content COMMA content .)
    RPARENTHESES    reduce using rule 22 (content -> content COMMA content .)

  ! COMMA           [ shift and go to state 20 ]


state 40

    (2) expr -> expr MULT expr .
    (2) expr -> expr . MULT expr
    (3) expr -> expr . LSHIFT expr
    (4) expr -> expr . AND expr
    (5) expr -> expr . OR expr
    (6) expr -> expr . EQUIVALENT expr

    MULT            reduce using rule 2 (expr -> expr MULT expr .)
    LSHIFT          reduce using rule 2 (expr -> expr MULT expr .)
    AND             reduce using rule 2 (expr -> expr MULT expr .)
    OR              reduce using rule 2 (expr -> expr MULT expr .)
    EQUIVALENT      reduce using rule 2 (expr -> expr MULT expr .)
    COMMA           reduce using rule 2 (expr -> expr MULT expr .)
    $end            reduce using rule 2 (expr -> expr MULT expr .)
    RBRACE          reduce using rule 2 (expr -> expr MULT expr .)
    RBRACKET        reduce using rule 2 (expr -> expr MULT expr .)
    RPARENTHESES    reduce using rule 2 (expr -> expr MULT expr .)

  ! MULT            [ shift and go to state 21 ]
  ! LSHIFT          [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! OR              [ shift and go to state 24 ]
  ! EQUIVALENT      [ shift and go to state 25 ]


state 41

    (3) expr -> expr LSHIFT expr .
    (2) expr -> expr . MULT expr
    (3) expr -> expr . LSHIFT expr
    (4) expr -> expr . AND expr
    (5) expr -> expr . OR expr
    (6) expr -> expr . EQUIVALENT expr

    LSHIFT          reduce using rule 3 (expr -> expr LSHIFT expr .)
    AND             reduce using rule 3 (expr -> expr LSHIFT expr .)
    OR              reduce using rule 3 (expr -> expr LSHIFT expr .)
    EQUIVALENT      reduce using rule 3 (expr -> expr LSHIFT expr .)
    COMMA           reduce using rule 3 (expr -> expr LSHIFT expr .)
    $end            reduce using rule 3 (expr -> expr LSHIFT expr .)
    RBRACE          reduce using rule 3 (expr -> expr LSHIFT expr .)
    RBRACKET        reduce using rule 3 (expr -> expr LSHIFT expr .)
    RPARENTHESES    reduce using rule 3 (expr -> expr LSHIFT expr .)
    MULT            shift and go to state 21

  ! MULT            [ reduce using rule 3 (expr -> expr LSHIFT expr .) ]
  ! LSHIFT          [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! OR              [ shift and go to state 24 ]
  ! EQUIVALENT      [ shift and go to state 25 ]


state 42

    (4) expr -> expr AND expr .
    (2) expr -> expr . MULT expr
    (3) expr -> expr . LSHIFT expr
    (4) expr -> expr . AND expr
    (5) expr -> expr . OR expr
    (6) expr -> expr . EQUIVALENT expr

    AND             reduce using rule 4 (expr -> expr AND expr .)
    COMMA           reduce using rule 4 (expr -> expr AND expr .)
    $end            reduce using rule 4 (expr -> expr AND expr .)
    RBRACE          reduce using rule 4 (expr -> expr AND expr .)
    RBRACKET        reduce using rule 4 (expr -> expr AND expr .)
    RPARENTHESES    reduce using rule 4 (expr -> expr AND expr .)
    MULT            shift and go to state 21
    LSHIFT          shift and go to state 22
    OR              shift and go to state 24
    EQUIVALENT      shift and go to state 25

  ! MULT            [ reduce using rule 4 (expr -> expr AND expr .) ]
  ! LSHIFT          [ reduce using rule 4 (expr -> expr AND expr .) ]
  ! OR              [ reduce using rule 4 (expr -> expr AND expr .) ]
  ! EQUIVALENT      [ reduce using rule 4 (expr -> expr AND expr .) ]
  ! AND             [ shift and go to state 23 ]


state 43

    (5) expr -> expr OR expr .
    (2) expr -> expr . MULT expr
    (3) expr -> expr . LSHIFT expr
    (4) expr -> expr . AND expr
    (5) expr -> expr . OR expr
    (6) expr -> expr . EQUIVALENT expr

    AND             reduce using rule 5 (expr -> expr OR expr .)
    OR              reduce using rule 5 (expr -> expr OR expr .)
    EQUIVALENT      reduce using rule 5 (expr -> expr OR expr .)
    COMMA           reduce using rule 5 (expr -> expr OR expr .)
    $end            reduce using rule 5 (expr -> expr OR expr .)
    RBRACE          reduce using rule 5 (expr -> expr OR expr .)
    RBRACKET        reduce using rule 5 (expr -> expr OR expr .)
    RPARENTHESES    reduce using rule 5 (expr -> expr OR expr .)
    MULT            shift and go to state 21
    LSHIFT          shift and go to state 22

  ! MULT            [ reduce using rule 5 (expr -> expr OR expr .) ]
  ! LSHIFT          [ reduce using rule 5 (expr -> expr OR expr .) ]
  ! AND             [ shift and go to state 23 ]
  ! OR              [ shift and go to state 24 ]
  ! EQUIVALENT      [ shift and go to state 25 ]


state 44

    (6) expr -> expr EQUIVALENT expr .
    (2) expr -> expr . MULT expr
    (3) expr -> expr . LSHIFT expr
    (4) expr -> expr . AND expr
    (5) expr -> expr . OR expr
    (6) expr -> expr . EQUIVALENT expr

    AND             reduce using rule 6 (expr -> expr EQUIVALENT expr .)
    EQUIVALENT      reduce using rule 6 (expr -> expr EQUIVALENT expr .)
    COMMA           reduce using rule 6 (expr -> expr EQUIVALENT expr .)
    $end            reduce using rule 6 (expr -> expr EQUIVALENT expr .)
    RBRACE          reduce using rule 6 (expr -> expr EQUIVALENT expr .)
    RBRACKET        reduce using rule 6 (expr -> expr EQUIVALENT expr .)
    RPARENTHESES    reduce using rule 6 (expr -> expr EQUIVALENT expr .)
    MULT            shift and go to state 21
    LSHIFT          shift and go to state 22
    OR              shift and go to state 24

  ! MULT            [ reduce using rule 6 (expr -> expr EQUIVALENT expr .) ]
  ! LSHIFT          [ reduce using rule 6 (expr -> expr EQUIVALENT expr .) ]
  ! OR              [ reduce using rule 6 (expr -> expr EQUIVALENT expr .) ]
  ! AND             [ shift and go to state 23 ]
  ! EQUIVALENT      [ shift and go to state 25 ]


state 45

    (24) content -> ID EQUAL expr .
    (2) expr -> expr . MULT expr
    (3) expr -> expr . LSHIFT expr
    (4) expr -> expr . AND expr
    (5) expr -> expr . OR expr
    (6) expr -> expr . EQUIVALENT expr

    COMMA           reduce using rule 24 (content -> ID EQUAL expr .)
    $end            reduce using rule 24 (content -> ID EQUAL expr .)
    RBRACE          reduce using rule 24 (content -> ID EQUAL expr .)
    RBRACKET        reduce using rule 24 (content -> ID EQUAL expr .)
    RPARENTHESES    reduce using rule 24 (content -> ID EQUAL expr .)
    MULT            shift and go to state 21
    LSHIFT          shift and go to state 22
    AND             shift and go to state 23
    OR              shift and go to state 24
    EQUIVALENT      shift and go to state 25


state 46

    (21) macro -> ID LPARENTHESES content . RPARENTHESES
    (22) content -> content . COMMA content

    RPARENTHESES    shift and go to state 50
    COMMA           shift and go to state 20


state 47

    (17) become -> item ARROW item .
    (17) become -> item . ARROW item

    ARROW           reduce using rule 17 (become -> item ARROW item .)
    MULT            reduce using rule 17 (become -> item ARROW item .)
    LSHIFT          reduce using rule 17 (become -> item ARROW item .)
    AND             reduce using rule 17 (become -> item ARROW item .)
    OR              reduce using rule 17 (become -> item ARROW item .)
    EQUIVALENT      reduce using rule 17 (become -> item ARROW item .)
    COMMA           reduce using rule 17 (become -> item ARROW item .)
    $end            reduce using rule 17 (become -> item ARROW item .)
    RBRACE          reduce using rule 17 (become -> item ARROW item .)
    RBRACKET        reduce using rule 17 (become -> item ARROW item .)
    RPARENTHESES    reduce using rule 17 (become -> item ARROW item .)

  ! ARROW           [ shift and go to state 31 ]


state 48

    (20) structure -> LBRACE content RBRACE .

    ARROW           reduce using rule 20 (structure -> LBRACE content RBRACE .)
    MULT            reduce using rule 20 (structure -> LBRACE content RBRACE .)
    LSHIFT          reduce using rule 20 (structure -> LBRACE content RBRACE .)
    AND             reduce using rule 20 (structure -> LBRACE content RBRACE .)
    OR              reduce using rule 20 (structure -> LBRACE content RBRACE .)
    EQUIVALENT      reduce using rule 20 (structure -> LBRACE content RBRACE .)
    COMMA           reduce using rule 20 (structure -> LBRACE content RBRACE .)
    $end            reduce using rule 20 (structure -> LBRACE content RBRACE .)
    RBRACE          reduce using rule 20 (structure -> LBRACE content RBRACE .)
    RBRACKET        reduce using rule 20 (structure -> LBRACE content RBRACE .)
    RPARENTHESES    reduce using rule 20 (structure -> LBRACE content RBRACE .)


state 49

    (18) list -> LBRACKET content RBRACKET .

    ARROW           reduce using rule 18 (list -> LBRACKET content RBRACKET .)
    MULT            reduce using rule 18 (list -> LBRACKET content RBRACKET .)
    LSHIFT          reduce using rule 18 (list -> LBRACKET content RBRACKET .)
    AND             reduce using rule 18 (list -> LBRACKET content RBRACKET .)
    OR              reduce using rule 18 (list -> LBRACKET content RBRACKET .)
    EQUIVALENT      reduce using rule 18 (list -> LBRACKET content RBRACKET .)
    COMMA           reduce using rule 18 (list -> LBRACKET content RBRACKET .)
    $end            reduce using rule 18 (list -> LBRACKET content RBRACKET .)
    RBRACE          reduce using rule 18 (list -> LBRACKET content RBRACKET .)
    RBRACKET        reduce using rule 18 (list -> LBRACKET content RBRACKET .)
    RPARENTHESES    reduce using rule 18 (list -> LBRACKET content RBRACKET .)


state 50

    (21) macro -> ID LPARENTHESES content RPARENTHESES .

    ARROW           reduce using rule 21 (macro -> ID LPARENTHESES content RPARENTHESES .)
    MULT            reduce using rule 21 (macro -> ID LPARENTHESES content RPARENTHESES .)
    LSHIFT          reduce using rule 21 (macro -> ID LPARENTHESES content RPARENTHESES .)
    AND             reduce using rule 21 (macro -> ID LPARENTHESES content RPARENTHESES .)
    OR              reduce using rule 21 (macro -> ID LPARENTHESES content RPARENTHESES .)
    EQUIVALENT      reduce using rule 21 (macro -> ID LPARENTHESES content RPARENTHESES .)
    COMMA           reduce using rule 21 (macro -> ID LPARENTHESES content RPARENTHESES .)
    $end            reduce using rule 21 (macro -> ID LPARENTHESES content RPARENTHESES .)
    RBRACE          reduce using rule 21 (macro -> ID LPARENTHESES content RPARENTHESES .)
    RBRACKET        reduce using rule 21 (macro -> ID LPARENTHESES content RPARENTHESES .)
    RPARENTHESES    reduce using rule 21 (macro -> ID LPARENTHESES content RPARENTHESES .)

